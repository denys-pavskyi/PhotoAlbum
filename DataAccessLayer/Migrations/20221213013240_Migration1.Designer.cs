// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(InternetPhotoAlbumDbContext))]
    [Migration("20221213013240_Migration1")]
    partial class Migration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataAccessLayer.Entities.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("NumberOfPictures")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            NumberOfPictures = 3,
                            Title = "Beatiful animals",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            NumberOfPictures = 4,
                            Title = "Beatiful cities",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Entities.AlbumPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AdditionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("PhotoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("PhotoId");

                    b.ToTable("AlbumPhotos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdditionDate = new DateTime(2022, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AlbumId = 1,
                            PhotoId = 11
                        },
                        new
                        {
                            Id = 2,
                            AdditionDate = new DateTime(2022, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AlbumId = 1,
                            PhotoId = 12
                        },
                        new
                        {
                            Id = 3,
                            AdditionDate = new DateTime(2022, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AlbumId = 1,
                            PhotoId = 13
                        },
                        new
                        {
                            Id = 4,
                            AdditionDate = new DateTime(2022, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AlbumId = 2,
                            PhotoId = 19
                        },
                        new
                        {
                            Id = 6,
                            AdditionDate = new DateTime(2022, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AlbumId = 2,
                            PhotoId = 20
                        },
                        new
                        {
                            Id = 7,
                            AdditionDate = new DateTime(2022, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AlbumId = 2,
                            PhotoId = 21
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double>("TotalRating")
                        .HasColumnType("float");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "animals1.jpg",
                            Title = "Deer",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2021, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "car1.jpg",
                            Title = "Car in woods",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2022, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "city4.jpg",
                            Title = "Japanese city",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "ukraine1.jpg",
                            Title = "Kyiv",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2021, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "ukraine3.jpg",
                            Title = "Field",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2018, 11, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "ukraine6.jpg",
                            Title = "KPI",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2015, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "ukraine4.jpg",
                            Title = "Ukrainian hills",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2022, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "mountain1.jpg",
                            Title = "Japan mountain",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2019, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "nature1.jpg",
                            Title = "Hills",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2018, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "animals1.jpg",
                            Title = "Bird",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 11,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "animals1.jpg",
                            Title = "Fox",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2022, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 12,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "animals4.jpg",
                            Title = "Arctic Fox",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2017, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 13,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "animals5.jpg",
                            Title = "Fox",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2018, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 14,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "animals6.jpg",
                            Title = "Arctic fox",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2022, 11, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 15,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "animals7.jpg",
                            Title = "Lion",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2022, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 16,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "animals8.jpg",
                            Title = "Wolf",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2022, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 17,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "city1.jpg",
                            Title = "City and building",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2022, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            Id = 18,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "city2.jpg",
                            Title = "New York",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2021, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            Id = 19,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "city3.jpg",
                            Title = "China, skyscrappers",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2022, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            Id = 20,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "city5.jpg",
                            Title = "Prague",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2022, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            Id = 21,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "city6.jpg",
                            Title = "New York busy streets",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2022, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            Id = 22,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod temDuisfugiat nulla pariaecat cupidata deserunt mollit anim id est laborum",
                            PhotoPath = "city7.jpg",
                            Title = "London",
                            TotalRating = 0.0,
                            UploadDate = new DateTime(2022, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Entities.PhotoRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Grade")
                        .HasColumnType("float");

                    b.Property<int>("PhotoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhotoId");

                    b.HasIndex("UserId");

                    b.ToTable("PhotosRating");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.PhotoTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PhotoId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhotoId");

                    b.HasIndex("TagId");

                    b.ToTable("PhotoTags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PhotoId = 1,
                            TagId = 1
                        },
                        new
                        {
                            Id = 2,
                            PhotoId = 15,
                            TagId = 1
                        },
                        new
                        {
                            Id = 3,
                            PhotoId = 16,
                            TagId = 1
                        },
                        new
                        {
                            Id = 4,
                            PhotoId = 8,
                            TagId = 3
                        },
                        new
                        {
                            Id = 5,
                            PhotoId = 8,
                            TagId = 5
                        },
                        new
                        {
                            Id = 6,
                            PhotoId = 3,
                            TagId = 3
                        },
                        new
                        {
                            Id = 7,
                            PhotoId = 3,
                            TagId = 5
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PhotoId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhotoId");

                    b.HasIndex("UserId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Report comment 1",
                            PhotoId = 6,
                            Status = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Report comment 2",
                            PhotoId = 11,
                            Status = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Comment = "Report comment 3",
                            PhotoId = 18,
                            Status = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Comment = "Report comment 4",
                            PhotoId = 19,
                            Status = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Comment = "Report comment 5",
                            PhotoId = 21,
                            Status = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            Comment = "Report comment 6",
                            PhotoId = 1,
                            Status = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            Comment = "Report comment 7",
                            PhotoId = 8,
                            Status = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Animals"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Cities"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Japan"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Rivers"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Mountains"
                        },
                        new
                        {
                            Id = 6,
                            Title = "Cars"
                        },
                        new
                        {
                            Id = 7,
                            Title = "Ukraine"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("UserStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1963, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "michael_jordan@gmail.com",
                            FirstName = "Michael",
                            LastName = "Jordan",
                            Password = "p6RQ3yI1RcKmNc7yPWgBV7UObduiFzi4Fx5Lbj4jnOw=",
                            PasswordSalt = "K0+QtIwuQbFLa8PYNU2pvQAXpXev+ED19dFefPsR2jQgNkQR1UX3ZVeGBayzVM3wkE3fRxXl5YhS/+UmledlpTBpCjIh1AhIKisoZBEP+bNUrKRFzCo4aDCX6NcKXYF1JJtFN05WN6U76DqJ/nTQAtiC2ID5T3Mz5ksKo6HbBrk=",
                            RegistrationDate = new DateTime(2020, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = 0,
                            UserName = "jordan100",
                            UserStatus = 0
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1990, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "john_peterson@gmail.com",
                            FirstName = "John",
                            LastName = "Peterson",
                            Password = "g6tkuHb1XNUHr+d58XPpB2IV6BWRXDqNV0DeozBMCgs=",
                            PasswordSalt = "5Lw7vE1pUmoxWdFanx0AutaWwbAGLCNUFJRBYz5rJN8gijPglGiCeKMQojTkFtg3bKbpLsVoh3tUU16Vp2S4P6K00oPViuK7v74o3WZHXmcQ7+IV5bYFbGibvpIjupoPteAgoPPY6OdwozZE9WkaJ/gn13m7BXCAZ5QZ4mLFHKk=",
                            RegistrationDate = new DateTime(2021, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = 1,
                            UserName = "johny1",
                            UserStatus = 0
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1963, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "barack_obama@gmail.com",
                            FirstName = "Barack",
                            LastName = "Obama",
                            Password = "f0higKoWg3+4qPMdfdBJo75gLGjgnWpJRAjlr2Onftg=",
                            PasswordSalt = "BYPiWsY7hVokG+NGE1Qj7zLUVRNJNypYvWHlHhF484p71ngMFwf/rDcbYJPRTtRIYE9tsTBHhjEanNSrT46tkOyNw9MB5DqfTYFBA4Vu9lLTZTDV7If8IH6UOs6y1krr3x6GwE+q4z89ZLRh9MJAlAFSCZO8q7fAFQGwzNfHUWI=",
                            RegistrationDate = new DateTime(2019, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = 1,
                            UserName = "barack_usa",
                            UserStatus = 0
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Album", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.User", "User")
                        .WithMany("Albums")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.AlbumPhoto", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Album", "Album")
                        .WithMany("AlbumPhotos")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Entities.Photo", "Photo")
                        .WithMany("AlbumPhotos")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Photo", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.User", "User")
                        .WithMany("Photos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.PhotoRating", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Photo", "Photo")
                        .WithMany("PhotoRatings")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Entities.User", "User")
                        .WithMany("PhotoRatings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Photo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.PhotoTag", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Photo", "Photo")
                        .WithMany("PhotoTags")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Entities.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Photo");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Report", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Photo", "Photo")
                        .WithMany()
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Entities.User", "User")
                        .WithMany("Reports")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Photo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Album", b =>
                {
                    b.Navigation("AlbumPhotos");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Photo", b =>
                {
                    b.Navigation("AlbumPhotos");

                    b.Navigation("PhotoRatings");

                    b.Navigation("PhotoTags");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.User", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("PhotoRatings");

                    b.Navigation("Photos");

                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
